INSERT INTO Test (name, description, date_of_creation) VALUES
('Test 1', 'Description of Test 1', '2022-03-14'),
('Test 2', 'Description of Test 2', '2022-03-15'),
('Test 3', 'Description of Test 3', '2022-03-16'),
('Test 4', 'Description of Test 4', '2022-03-17'),
('Test 5', 'Description of Test 5', '2022-03-18'),
('Test 6', 'Description of Test 6', '2022-03-19'),
('Test 7', 'Description of Test 7', '2022-03-20');


INSERT INTO Question (number, text, correct_answer, points)
VALUES
(1, 'Что такое Python?', 'Язык программирования', 8),
(2, 'Как создать переменную в Python?', 'my_var = 10', 3),
(3, 'Как проверить, содержится ли элемент в списке?', 'elem in my_list', 8),
(4, 'Что выведет следующий код: print("Hello", "world!")?', 'Hello world!', 2),
(5, 'Какой тип данных вернет функция type()?', 'Тип объекта', 3),
(6, 'Какой оператор используется для взятия остатка от деления?', '%', 2),
(7, 'Что такое метод в Python?', 'Функция, которая работает с объектом', 9),
(8, 'Как вызвать функцию?', 'function()', 9),
(9, 'Как проверить, что две переменные ссылаются на один и тот же объект?', 'var1 is var2', 10),
(10, 'Какой метод используется для сортировки списка?', 'sort()', 7),
(11, 'Какой метод используется для добавления элемента в конец списка?', 'append()', 6),
(12, 'Что выведет следующий код: print(2 + 2 * 2)?', '6', 3),
(13, 'Какой метод используется для удаления элемента из списка?', 'remove()', 7),
(14, 'Какой оператор используется для логического И?', 'and', 10),
(15, 'Какой тип данных используется для хранения кортежей в Python?', 'tuple', 1),
(16, 'Что такое словарь в Python?', 'Структура данных, хранящая пары "ключ-значение"', 4),
(17, 'Какой метод используется для объединения двух списков?', 'extend()', 2),
(18, 'Какой оператор используется для логического НЕ?', 'not', 10),
(19, 'Что такое функция в Python?', 'Блок кода, который может быть вызван из другого места программы', 3),
(20, 'Какие операторы используются для создания условий в Python?', 'if, elif, else', 9),
(1, 'Что такое цикл for в Python?', 'Цикл, который выполняет определенное количество раз', 7),
(2, 'Какой метод используется для получения количества элементов в списке?', 'len()', 1),
(3, 'Какой тип данных используется для хранения множеств в Python?', 'set', 10),
(4, 'Что такое класс в Python?', 'Шаблон для создания объектов', 3),
(5, 'Какой метод используется для получения значения по ключу из словаря?', 'get()', 10),
(6, 'Что выведет следующий код: print("Hello"[::-1])?', 'olleH', 5),
(7, 'Какой метод используется для замены элементов в списке?', 'my_list[index] = new_value', 7),
(8, 'Какой тип данных используется для хранения булевых значений в Python?', 'bool', 6),
(9, 'Какой оператор используется для проверки равенства двух значений?', '==', 8),
(10, 'Какой метод используется для очистки списка?', 'clear()', 3),
(11, 'Что такое модуль в Python?', 'Файл, содержащий определения и инструкции на языке Python', 6),
(12, 'Какой метод используется для проверки наличия ключа в словаре?', 'in', 1),
(13, 'Какой тип данных используется для хранения диапазона чисел в Python?', 'range', 1),
(14, 'Что выведет следующий код: print(list(range(0, 10, 2)))?', '[0, 2, 4, 6, 8]', 9),
(15, 'Какой метод используется для разбиения строки на список по разделителю?', 'split()', 6),
(16, 'Какой метод используется для добавления элемента в список?', 'append()', 5),
(17, 'Какой тип данных используется для хранения символов в Python?', 'str', 10),
(18, 'Что такое метод в Python?', 'Функция, которая работает с объектом', 7),
(19, 'Какой метод используется для удаления элемента из списка по индексу?', 'pop()', 6),
(20, 'Какой оператор используется для логического И в Python?', 'and', 9),
(1, 'Какой тип данных используется для хранения кортежей в Python?', 'tuple', 1),
(2, 'Что выведет следующий код: print(3 * "2")?', '222', 1),
(3, 'Какой метод используется для сортировки списка?', 'sort()', 10),
(4, 'Какой тип данных используется для хранения чисел с плавающей точкой в Python?', 'float', 8),
(5, 'Какой оператор используется для логического ИЛИ в Python?', 'or', 1),
(6, 'Какой метод используется для копирования списка?', 'copy()', 6),
(7, 'Что такое исключение в Python?', 'Ошибка, возникающая во время выполнения программы', 1),
(8, 'Какой метод используется для перевода строки в верхний регистр?', 'upper()', 9),
(9, 'Какой оператор используется для проверки принадлежности элемента к списку?', 'in', 8),
(10, 'Какой тип данных используется для хранения логических значений в Python?', 'bool', 5),
(11, 'Что выведет следующий код: print(1 != 1 or 2 == 2)?', 'True', 7),
(12, 'Какой метод используется для удаления элемента из списка по значению?', 'remove()', 10),
(13, 'Какой оператор используется для проверки неравенства двух значений?', '!=', 2),
(14, 'Какой тип данных используется для хранения байтовых строк в Python?', 'bytes', 5),
(15, 'Какой метод используется для объединения двух словарей в Python?', 'update()', 8),
(16, 'Какой тип данных используется для хранения объектов в Python?', 'object', 4),
(17, 'Что такое lambda-функция в Python?', 'Анонимная функция', 1),
(18, 'Какой метод используется для добавления элемента в множество?', 'add()', 5),
(19, 'Какой оператор используется для проверки идентичности двух объектов в Python?', 'is', 4),
(20, 'Какой тип данных используется для хранения множеств в Python?', 'set', 5),
(1, 'Что выведет следующий код: print("hello"[-2])?', 'l', 6),
(2, 'Какой метод используется для удаления всех элементов из списка?', 'clear()', 9),
(3, 'Какой тип данных используется для хранения дробных чисел с фиксированной точностью в Python?', 'decimal', 6),
(4, 'Какой оператор используется для проверки неравенства и неравенства типов двух объектов в Python?', '!= и is not', 6),
(5, 'Какой метод используется для удаления элемента из множества?', 'remove()', 2),
(6, 'Что такое модуль в Python?', 'Файл с расширением .py, содержащий код', 5),
(7, 'Какой метод используется для замены подстроки в строке?', 'replace()', 5),
(8, 'Какой оператор используется для проверки принадлежности ключа к словарю?', 'in', 4),
(9, 'Какой тип данных используется для хранения комплексных чисел в Python?', 'complex', 10),
(10, 'Что выведет следующий код: print(not True and False)?', 'False', 10),
(11, 'Какой метод используется для извлечения элемента из списка по индексу?', 'getitem()', 2),
(12, 'Какой оператор используется для проверки принадлежности элемента к множеству?', 'in', 9),
(13, 'Какой тип данных используется для хранения дат и времени в Python?', 'datetime', 10),
(14, 'Какой метод используется для перевода строки в список?', 'split()', 2),
(15, 'Какой оператор используется для проверки вхождения элемента в список?', 'in', 6),
(16, 'Какой тип данных используется для хранения булевых значений в Python?', 'bool', 2),
(17, 'Что выведет следующий код: print(3/2)?', '45047', 4),
(18, 'Какой метод используется для сортировки списка?', 'sort()', 1),
(19, 'Какой оператор используется для объединения двух списков в Python?', '+', 3),
(20, 'Какой тип данных используется для хранения Unicode-символов в Python?', 'str', 2),
(1, 'Что такое рекурсия в Python?', 'Функция, которая вызывает сама себя', 2),
(2, 'Какой метод используется для удаления элемента из списка по индексу?', 'pop()', 6),
(3, 'Какой оператор используется для проверки того, что элемент принадлежит списку или кортежу?', 'in', 9),
(4, 'Какой тип данных используется для хранения больших целых чисел в Python?', 'int', 3),
(5, 'Что выведет следующий код: print(len([1,2,3]), [1,2,3][len([1,2,3])-1])?', '3 3', 9),
(6, 'Какой метод используется для объединения элементов списка в строку?', 'join()', 1),
(7, 'Какой оператор используется для проверки того, что ключ принадлежит словарю?', 'in', 1),
(8, 'Какой тип данных используется для хранения данных в виде байтовых строк в Python?', 'bytes', 6),
(9, 'Что такое декоратор в Python?', 'Функция, которая принимает другую функцию в качестве аргумента и возвращает новую функцию', 3),
(10, 'Какой метод используется для проверки того, что все элементы списка удовлетворяют определенному условию?', 'all()', 1),
(11, 'Какой оператор используется для создания генератора в Python?', 'yield', 4),
(12, 'Какой тип данных используется для хранения упорядоченной коллекции значений в Python?', 'tuple', 5),
(13, 'Что выведет следующий код: print("python"[1:4])?', 'yth', 6),
(14, 'Какой метод используется для добавления элемента в конец списка?', 'append()', 2),
(15, 'Какой оператор используется для создания множества в Python?', '{}', 9),
(16, 'Какой тип данных используется для хранения коллекции уникальных элементов в Python?', 'set', 5),
(17, 'Что такое lambda-функция в Python?', 'Анонимная функция, которая может иметь только одно выражение', 7),
(18, 'Какой метод используется для копирования списка?', 'copy()', 4),
(19, 'Какой оператор используется для создания словаря в Python?', '{}', 3),
(20, 'Какой тип данных используется для хранения последовательности элементов в Python с возможностью изменения?', 'list', 2),
(1, 'Что выведет следующий код: print("hello world".title())?', 'Hello World', 5),
(2, 'Какой метод используется для удаления всех элементов из списка?', 'clear()', 3),
(3, 'Какой оператор используется для выполнения целочисленного деления в Python?', '//', 7),
(4, 'Какой тип данных используется для хранения пары ключ-значение в Python?', 'dict', 7),
(5, 'Что такое генератор в Python?', 'Функция, которая возвращает итератор и использует ключевое слово yield', 7),
(6, 'Какой метод используется для получения индекса элемента в списке?', 'index()', 9),
(7, 'Какой оператор используется для создания среза в Python?', ':', 8),
(8, 'Какой тип данных используется для хранения неизменяемых коллекций в Python?', 'tuple', 6),
(9, 'Что выведет следующий код: print(2**3)?', '8', 10),
(10, 'Какой метод используется для удаления элемента из списка?', 'remove()', 1),
(11, 'Какой оператор используется для проверки на вхождение элемента в коллекцию в Python?', 'in', 1),
(12, 'Какой тип данных используется для хранения двоичных данных в Python?', 'bytes', 7),
(13, 'Что такое рекурсия в Python?', 'Функция, которая вызывает сама себя', 5),
(14, 'Какой метод используется для сортировки списка в порядке возрастания?', 'sort()', 9),
(15, 'Какой оператор используется для выполнения логического И в Python?', 'and', 8),
(16, 'Какой тип данных используется для хранения текстовых данных в Python?', 'str', 9),
(17, 'Что выведет следующий код: print(len([1, 2, 3]))?', '3', 9),
(18, 'Какой метод используется для получения количества вхождений элемента в список?', 'count()', 5),
(19, 'Какой оператор используется для выполнения логического ИЛИ в Python?', 'or', 9),
(20, 'Какой тип данных используется для хранения именованных значений в Python?', 'dict', 7),
(1, 'Что такое модуль в Python?', 'Файл с расширением .py, содержащий определения функций, классов и переменных', 3),
(2, 'Какой метод используется для разворота списка?', 'reverse()', 5),
(3, 'Какой оператор используется для выполнения логического НЕ в Python?', 'not', 6),
(4, 'Какой тип данных используется для хранения чисел с плавающей точкой в Python?', 'float', 2),
(5, 'Что выведет следующий код: print("python".replace("p", "j", 1))?', 'jython', 5),
(6, 'Какой метод используется для проверки наличия ключа в словаре?', 'contains()', 7),
(7, 'Какой оператор используется для выполнения условного оператора в Python?', 'if', 9),
(8, 'Что такое lambda-функция в Python?', 'Функция, которая может быть определена в одной строке без использования ключевого слова def', 10),
(9, 'Какой метод используется для добавления элемента в конец списка?', 'append()', 5),
(10, 'Какой оператор используется для выполнения цикла for в Python?', 'for', 2),
(11, 'Какой тип данных используется для хранения множества уникальных элементов в Python?', 'set', 7),
(12, 'Что выведет следующий код: print("hello".capitalize())?', 'Hello', 5),
(13, 'Какой метод используется для объединения двух словарей?', 'update()', 9),
(14, 'Какой оператор используется для выполнения цикла while в Python?', 'while', 6),
(15, 'Какой тип данных используется для хранения последовательности элементов в Python?', 'list', 6),
(16, 'Что такое генератор в Python?', 'Функция, которая возвращает итератор', 4),
(17, 'Какой метод используется для копирования списка?', 'copy()', 4),
(18, 'Какой оператор используется для выполнения условного оператора с выбором из нескольких вариантов в Python?', 'if-elif-else', 3),
(19, 'Какой тип данных используется для хранения упорядоченных коллекций элементов в Python?', 'tuple', 1),
(20, 'Что выведет следующий код: print(2 ** 3)?', '8', 8);


INSERT INTO Applicant (full_name, link_to_telegram, age, education, link_to_resume, skills, experience, schedule, employment, id_profession) VALUES
('Иванов Иван Иванович', '@ivanov', '28', 'Высшее', 'https://resume.com/ivanov', 'Java, SQL, Python', '3 года', 'Полный день', 'Полный день', 1),
('Петров Петр Петрович', '@petrov', '32', 'Высшее', 'https://resume.com/petrov', 'Java, JavaScript, React', '5 лет', 'Удаленная работа', 'Полный день', 3),
('Сидоров Андрей Александрович', '@sidorov', '25', 'Среднее специальное', 'https://resume.com/sidorov', 'C++, PHP', '2 года', 'Полный день', 'Полный день', 2),
('Козлова Ольга Павловна', '@kozlova', '29', 'Высшее', 'https://resume.com/kozlova', 'JavaScript, React, Node.js', '4 года', 'Полный день', 'Частичная занятость', 5),
('Михайлова Елена Игоревна', '@mikhailova', '23', 'Высшее', 'https://resume.com/mikhailova', 'Java, Python', '1 год', 'Удаленная работа', 'Полный день', 7),
('Александрова Ирина Анатольевна', '@alexandrova', '26', 'Высшее', 'https://resume.com/alexandrova', 'Java, SQL, Python', '3 года', 'Полный день', 'Полный день', 9),
('Новиков Дмитрий Владимирович', '@novikov', '31', 'Высшее', 'https://resume.com/novikov', 'JavaScript, React, Node.js', '5 лет', 'Полный день', 'Полный день', 6),
('Лебедева Анастасия Олеговна', '@lebedeva', '24', 'Высшее', 'https://resume.com/lebedeva', 'Java, SQL, Python', '1 год', 'Удаленная работа', 'Частичная занятость', 4),
('Кузнецов Иван Николаевич', '@kuznetsov', '27', 'Высшее', 'https://resume.com/kuznetsov', 'JavaScript, Angular, Node.js', '3 года', 'Полный день', 'Полный день', 10),
('Семенова Мария Владимировна', '@semenova', '30', 'Высшее', 'https://resume.com/semenova', 'Java, SQL, Python', '5 лет', 'Полный день', 'Полный день', 11);


INSERT INTO Test_result (id_applicant, id_test) VALUES
(1, 1),
(1, 2),
(1, 3),
(2, 2),
(3, 3),
(4, 4),
(5, 5),
(6, 6),
(7, 7),
(8, 1),
(9, 2),
(10, 3);


INSERT INTO Answer (id_question, response_text, is_the_answer_correct) VALUES
(1, 'Язык программирования', true),
(1, 'Операционная система', false),
(1, 'Среда разработки', false),
(2, 'my_var = 10', true),
(2, 'myVar = 10', false),
(2, 'my var = 10', false),
(3, 'elem in my_list', true),
(3, 'elem not in my_list', false),
(3, 'elem exist my_list', false),
(4, 'Hello world!', true),
(4, 'Hello', false),
(4, 'world!', false),
(5, 'Тип объекта', true),
(5, 'Объект', false),
(5, 'Значение', false),
(6, '%', true),
(6, '/', false),
(6, '*', false),
(7, 'Функция, которая работает с объектом', true),
(7, 'Свойство объекта', false),
(7, 'Переменная класса', false),
(8, 'function()', true),
(8, 'call function', false),
(8, 'my_function()', false),
(9, 'var1 is var2', true),
(9, 'var1 == var2', false),
(9, 'var1 === var2', false),
(10, 'sort()', true),
(10, 'sorted()', false),
(10, 'order()', false),
(11, 'append()', true),
(11, 'add()', false),
(11, 'insert()', false),
(12, '6', true),
(12, '8', false),
(12, '12', false),
(13, 'remove()', true),
(13, 'delete()', false),
(13, 'erase()', false),
(14, 'and', true),
(14, 'or', false),
(14, 'not', false),
(15, 'tuple', true),
(15, 'list', false),
(15, 'dict', false),
(16, 'Структура данных, хранящая пары ключ-значение', true),
(16, 'Метод для работы со строками', false),
(16, 'Среда разработки', false),
(17, 'extend()', true),
(17, 'combine()', false),
(17, 'join()', false),
(18, 'not', true),
(18, 'and', false),
(18, 'or', false),
(19, 'Блок кода, который может быть вызван из другого места программы', true),
(19, 'Переменная класса', false),
(19, 'Свойство объекта', false),
(20, 'if, elif, else', true),
(20, 'for, while, do', false),
(20, 'try, except, finally', false),
(21, 'Цикл, который выполняет определенное количество раз', true),
(21, 'Цикл, который выполняется до тех пор, пока условие истинно', false),
(21, 'Цикл, который выполняется до тех пор, пока условие ложно', false),
(22, 'len()', true),
(22, 'count()', false),
(22, 'size()', false),
(23, 'set', true),
(23, 'list', false),
(23, 'dict', false),
(24, 'Шаблон для создания объектов', true),
(24, 'Функция, которая работает с объектом', false),
(24, 'Структура данных, хранящая пары ключ-значение', false),
(25, 'get()', true),
(25, 'value()', false),
(25, 'item()', false),
(26, 'olleH', true),
(26, 'Hello', false),
(26, 'elloH', false),
(27, 'my_list[index] = new_value', true),
(27, 'replace()', false),
(27, 'change()', false),
(28, 'bool', true),
(28, 'int', false),
(28, 'str', false),
(29, '==', true),
(29, '=', false),
(29, '!=', false),
(30, 'clear()', true),
(30, 'empty()', false),
(30, 'remove_all()', false),
(31, 'Файл, содержащий определения и инструкции на языке Python', true),
(31, 'Класс объекта', false),
(31, 'Функция, которая работает с объектом', false),
(32, 'in', true),
(32, 'exist', false),
(32, 'has_key', false),
(33, 'range', true),
(33, 'list', false),
(33, 'tuple', false),
(34, '[0, 2, 4, 6, 8]', true),
(34, '[0, 1, 2, 3, 4]', false),
(34, '[1, 3, 5, 7, 9]', false),
(35, 'split()', true),
(35, 'join()', false),
(35, 'cut()', false),
(36, 'append()', true),
(36, 'add()', false),
(36, 'push()', false),
(37, 'str', true),
(37, 'char', false),
(37, 'symbol', false),
(38, 'Функция, которая работает с объектом', true),
(38, 'Класс объекта', false),
(38, 'Структура данных, хранящая пары ключ-значение', false),
(39, 'pop()', true),
(39, 'remove()', false),
(39, 'delete()', false),
(40, 'and', true),
(40, 'or', false),
(40, 'not', false),
(41, 'tuple', true),
(41, 'list', false),
(41, 'set', false),
(42, '222', true),
(42, '6', false),
(42, '32', false),
(43, 'sort()', true),
(43, 'order()', false),
(43, 'arrange()', false),
(44, 'float', true),
(44, 'int', false),
(44, 'double', false),
(45, 'or', true),
(45, 'and', false),
(45, 'not', false),
(46, 'copy()', true),
(46, 'clone()', false),
(46, 'duplicate()', false),
(47, 'Ошибка, возникающая во время выполнения программы', true),
(47, 'Условие, которое может быть истинным или ложным', false),
(47, 'Функция, которая работает с объектом', false),
(48, 'upper()', true),
(48, 'capitalize()', false),
(48, 'casefold()', false),
(49, 'in', true),
(49, 'contains()', false),
(49, 'has()', false),
(50, 'bool', true),
(50, 'int', false),
(50, 'str', false),
(51, 'True', true),
(51, 'False', false),
(51, 'Error', false),
(52, 'remove()', true),
(52, 'delete()', false),
(52, 'discard()', false),
(53, '!=', true),
(53, '==', false),
(53, '=', false),
(54, 'bytes', true),
(54, 'str', false),
(54, 'bytearray', false),
(55, 'update()', true),
(55, 'merge()', false),
(55, 'combine()', false),
(56, 'object', true),
(56, 'class', false),
(56, 'instance', false),
(57, 'Анонимная функция', true),
(57, 'Разновидность цикла', false),
(57, 'Структура данных, хранящая пары ключ-значение', false),
(58, 'add()', true),
(58, 'insert()', false),
(58, 'push()', false),
(59, 'is', true),
(59, '==', false),
(59, 'equals()', false),
(60, 'set', true),
(60, 'list', false),
(60, 'tuple', false),
(61, 'l', true),
(61, 'o', false),
(61, 'Error', false),
(62, 'clear()', true),
(62, 'delete()', false),
(62, 'remove_all()', false),
(63, 'decimal', true),
(63, 'float', false),
(63, 'double', false),
(64, '!= и is not', true),
(64, '== и is not', false),
(64, '!= и is', false),
(65, 'remove()', true),
(65, 'delete()', false),
(65, 'discard()', false),
(66, 'Файл с расширением .py, содержащий код', true),
(66, 'Структура данных, хранящая пары ключ-значение', false),
(66, 'Функция, которая работает с объектом', false),
(67, 'replace()', true),
(67, 'swap()', false),
(67, 'substitute()', false),
(68, 'in', true),
(68, 'contains()', false),
(68, 'has_key()', false),
(69, 'complex', true),
(69, 'real', false),
(69, 'float', false),
(70, 'False', true),
(70, 'True', false),
(70, 'Error', false),
(71, 'getitem()', true),
(71, 'extract()', false),
(71, 'get()', false),
(72, 'in', true),
(72, 'contains()', false),
(72, 'has()', false),
(73, 'datetime', true),
(73, 'date', false),
(73, 'time', false),
(74, 'split()', true),
(74, 'join()', false),
(74, 'list()', false),
(75, 'in', true),
(75, 'contains()', false),
(75, 'has()', false),
(76, 'bool', true),
(76, 'boolean', false),
(76, 'bit', false),
(77, '45047', true),
(77, '1', false),
(77, '2', false),
(78, 'sort()', true),
(78, 'sorted()', false),
(78, 'order()', false),
(79, '+', true),
(79, '*', false),
(79, '&', false),
(80, 'str', true),
(80, 'char', false),
(80, 'unicode', false),
(81, 'Функция, которая вызывает сама себя', true),
(81, 'Цикл, который выполняется определенное количество раз', false),
(81, 'Структура данных, хранящая последовательность элементов', false),
(82, 'pop()', true),
(82, 'remove()', false),
(82, 'delete()', false),
(83, 'in', true),
(83, 'contains()', false),
(83, 'has()', false),
(84, 'int', true),
(84, 'long', false),
(84, 'double', false),
(85, '3 3', true),
(85, '2 2', false),
(85, '3 1', false),
(86, 'join()', true),
(86, 'concat()', false),
(86, 'merge()', false),
(87, 'in', true),
(87, 'contains()', false),
(87, 'has_key()', false),
(88, 'bytes', true),
(88, 'string', false),
(88, 'bytearray', false),
(89, 'Функция, которая принимает другую функцию в качестве аргумента и возвращает новую функцию', true),
(89, 'Функция, которая используется для получения информации об объекте', false),
(89, 'Структура данных, хранящая последовательность элементов', false),
(90, 'all()', true),
(90, 'any()', false),
(90, 'check()', false),
(91, 'yield', true),
(91, 'generate', false),
(91, 'create', false),
(92, 'tuple', true),
(92, 'list', false),
(92, 'array', false),
(93, 'yth', true),
(93, 'pyt', false),
(93, 'hon', false),
(94, 'append()', true),
(94, 'add()', false),
(94, 'insert()', false),
(95, '{}', true),
(95, '()', false),
(95, '[]', false),
(96, 'set', true),
(96, 'list', false),
(96, 'dict', false),
(97, 'Анонимная функция, которая может иметь только одно выражение', true),
(97, 'Глобальная функция, которая может быть вызвана из любой части программы', false),
(97, 'Метод класса, который может быть использован для изменения его свойств', false),
(98, 'copy()', true),
(98, 'clone()', false),
(98, 'duplicate()', false),
(99, '{}', true),
(99, '()', false),
(99, '[]', false),
(100, 'list', true),
(100, 'tuple', false),
(100, 'set', false),
(101, 'Hello World', true),
(101, 'hello world', false),
(101, 'HEllo WorLD', false),
(102, 'clear()', true),
(102, 'delete_all()', false),
(102, 'remove_all()', false),
(103, '//', true),
(103, '/', false),
(103, '%', false),
(104, 'dict', true),
(104, 'map', false),
(104, 'set', false),
(105, 'Функция, которая возвращает итератор и использует ключевое слово yield', true),
(105, 'Структура данных, хранящая последовательность элементов', false),
(105, 'Метод класса, который может быть использован для изменения его свойств', false),
(106, 'index()', true),
(106, 'find()', false),
(106, 'get()', false),
(107, ':', true),
(107, '..', false),
(107, '->', false),
(108, 'tuple', true),
(108, 'list', false),
(108, 'set', false),
(109, '8', true),
(109, '6', false),
(109, '5', false),
(110, 'remove()', true),
(110, 'delete()', false),
(110, 'erase()', false),
(111, 'in', true),
(111, 'exists', false),
(111, 'contains', false),
(112, 'bytes', true),
(112, 'bits', false),
(112, 'binary', false),
(113, 'Функция, которая вызывает сама себя', true),
(113, 'Метод класса, который может быть использован для изменения его свойств', false),
(113, 'Итератор, который используется для обхода последовательности элементов', false),
(114, 'sort()', true),
(114, 'order()', false),
(114, 'arrange()', false),
(115, 'and', true),
(115, 'or', false),
(115, 'not', false),
(116, 'str', true),
(116, 'text', false),
(116, 'string', false),
(117, '3', true),
(117, '6', false),
(117, '4', false),
(118, 'count()', true),
(118, 'find()', false),
(118, 'get()', false),
(119, 'or', true),
(119, 'and', false),
(119, 'not', false),
(120, 'dict', true),
(120, 'tuple', false),
(120, 'list', false),
(121, 'Файл с расширением .py, содержащий определения функций, классов и переменных', true),
(121, 'Модификатор доступа к методам класса', false),
(121, 'Интерфейс, который определяет методы, которые должны быть реализованы классом', false),
(122, 'reverse()', true),
(122, 'flip()', false),
(122, 'turn_around()', false),
(123, 'not', true),
(123, 'and', false),
(123, 'or', false),
(124, 'float', true),
(124, 'double', false),
(124, 'decimal', false),
(125, 'jython', true),
(125, 'pythoj', false),
(125, 'jytpn', false),
(126, 'contains()', true),
(126, 'has_key()', false),
(126, 'contains()', false),
(127, 'if', true),
(127, 'switch', false),
(127, 'then', false),
(128, 'Функция, которая может быть определена в одной строке без использования ключевого слова def', true),
(128, 'Функция, которая принимает переменное количество аргументов', false),
(128, 'Функция, которая может быть вызвана только из другой функции', false),
(129, 'append()', true),
(129, 'add()', false),
(129, 'insert()', false),
(130, 'for', true),
(130, 'foreach', false),
(130, 'while', false),
(131, 'set', true),
(131, 'list', false),
(131, 'tuple', false),
(132, 'Hello', true),
(132, 'HELLO', false),
(132, 'hello', false),
(133, 'update()', true),
(133, 'merge()', false),
(133, 'join()', false),
(134, 'while', true),
(134, 'for', false),
(134, 'foreach', false),
(135, 'list', true),
(135, 'tuple', false),
(135, 'set', false),
(136, 'Функция, которая возвращает итератор', true),
(136, 'Функция, которая создает новый объект', false),
(136, 'Функция, которая вызывает сама себя', false),
(137, 'copy()', true),
(137, 'clone()', false),
(137, 'duplicate()', false),
(138, 'if-elif-else', true),
(138, 'switch-case-default', false),
(138, 'try-except-else', false),
(139, 'tuple', true),
(139, 'list', false),
(139, 'set', false),
(140, '8', true),
(140, '6', false),
(140, '5', false);


INSERT INTO Applicant_answers (id_question, id_result, id_answer)
VALUES 
(1,1,1,3),
(2,1,5,5),
(3,1,9,6),
(4,1,11,4),
(5,1,15,0),
(6,1,16,5),
(7,1,21,2),
(8,1,23,1),
(9,1,27,5),
(10,1,29,4),
(11,1,31,0),
(12,1,34,6),
(13,1,39,3),
(14,1,40,2),
(15,1,44,3),
(16,1,48,2),
(17,1,50,2),
(18,1,54,5),
(19,1,56,3),
(20,1,58,4),
(21,2,61,5),
(22,2,64,5),
(23,2,67,0),
(24,2,71,4),
(25,2,75,7),
(26,2,78,2),
(27,2,81,2),
(28,2,83,1),
(29,2,87,7),
(30,2,89,3),
(31,2,93,5),
(32,2,94,4),
(33,2,98,5),
(34,2,101,5),
(35,2,104,4),
(36,2,106,4),
(37,2,109,6),
(38,2,114,3),
(39,2,116,0),
(40,2,119,2),
(41,3,123,3),
(42,3,126,1),
(43,3,128,1),
(44,3,132,0),
(45,3,133,6),
(46,3,136,4),
(47,3,140,1),
(48,3,144,1),
(49,3,146,1),
(50,3,148,0),
(51,3,152,6),
(52,3,154,6),
(53,3,159,1),
(54,3,161,1),
(55,3,165,5),
(56,3,166,7),
(57,3,170,7),
(58,3,172,0),
(59,3,176,5),
(60,3,179,7),
(61,6,183,5),
(62,6,186,5),
(63,6,187,0),
(64,6,190,5),
(65,6,193,1),
(66,6,198,5),
(67,6,200,2),
(68,6,204,1),
(69,6,207,2),
(70,6,209,5),
(71,6,212,3),
(72,6,216,6),
(73,6,218,7),
(74,6,221,3),
(75,6,224,0),
(76,6,227,7),
(77,6,231,6),
(78,6,232,7),
(79,6,236,0),
(80,6,238,1),
(81,7,243,7),
(82,7,246,6),
(83,7,248,5),
(84,7,251,7),
(85,7,255,5),
(86,7,256,4),
(87,7,259,2),
(88,7,263,7),
(89,7,265,3),
(90,7,270,5),
(91,7,272,6),
(92,7,276,0),
(93,7,277,1),
(94,7,280,2),
(95,7,283,0),
(96,7,286,2),
(97,7,291,0),
(98,7,293,1),
(99,7,295,6),
(100,7,299,5),
(101,8,302,5),
(102,8,304,4),
(103,8,308,5),
(104,8,311,4),
(105,8,315,0),
(106,8,316,6),
(107,8,321,4),
(108,8,323,6),
(109,8,325,4),
(110,8,329,4),
(111,8,331,0),
(112,8,336,4),
(113,8,337,7),
(114,8,342,4),
(115,8,343,0),
(116,8,347,1),
(117,8,351,4),
(118,8,354,4),
(119,8,355,0),
(120,8,359,0),
(121,9,362,3),
(122,9,365,3),
(123,9,369,2),
(124,9,370,0),
(125,9,374,6),
(126,9,376,3),
(127,9,379,2),
(128,9,384,3),
(129,9,385,5),
(130,9,390,2),
(131,9,391,5),
(132,9,394,2),
(133,9,397,5),
(134,9,402,3),
(135,9,403,1),
(136,9,408,1),
(137,9,411,1),
(138,9,414,3),
(139,9,416,2),
(140,9,418,1),
(1,10,1,7),
(2,10,4,5),
(3,10,8,7),
(4,10,12,0),
(5,10,15,1),
(6,10,16,4),
(7,10,20,7),
(8,10,24,1),
(9,10,25,5),
(10,10,30,1),
(11,10,33,4),
(12,10,34,6),
(13,10,39,4),
(14,10,42,2),
(15,10,43,2),
(16,10,47,7),
(17,10,51,1),
(18,10,52,6),
(19,10,57,5),
(20,10,58,6),
(21,4,62,4),
(22,4,64,4),
(23,4,69,1),
(24,4,70,7),
(25,4,73,4),
(26,4,76,2),
(27,4,80,2),
(28,4,82,3),
(29,4,85,6),
(30,4,88,6),
(31,4,92,6),
(32,4,95,0),
(33,4,99,2),
(34,4,102,1),
(35,4,105,4),
(36,4,108,3),
(37,4,111,2),
(38,4,113,6),
(39,4,116,3),
(40,4,120,0),
(41,5,123,7),
(42,5,126,0),
(43,5,127,2),
(44,5,131,1),
(45,5,133,4),
(46,5,138,6),
(47,5,139,7),
(48,5,144,7),
(49,5,145,0),
(50,5,150,6),
(51,5,153,3),
(52,5,154,6),
(53,5,158,2),
(54,5,161,0),
(55,5,164,2),
(56,5,166,3),
(57,5,170,6),
(58,5,172,2),
(59,5,176,3),
(60,5,178,6);


INSERT INTO Author (full_name, company, company_address, mail, phone) 
VALUES 
('Иванов Иван', 'ООО "Рога и копыта"', 'ул. Пушкина, д. 10, офис 205', 'ivanov@mail.ru', '8-800-555-35-35'),
('Петров Петр', 'ИП Иванов', 'ул. Лермонтова, д. 7', 'petrov@yandex.ru', '+7 (999) 123-45-67'),
('Сидоров Алексей', 'АО "Сбербанк"', 'ул. Маяковского, д. 15', 'sidorov@sberbank.ru', '+7 (495) 123-45-67'),
('Козлова Елена', 'ООО "Радуга"', 'ул. Гагарина, д. 50', 'kozlova@raduga.ru', '+7 (987) 654-32-10'),
('Григорьев Дмитрий', 'ИП Петров', 'ул. Красноармейская, д. 3', 'grigorev@yandex.ru', '8-800-555-35-35'),
('Иванова Ольга', 'ООО "Рога и копыта"', 'ул. Пушкина, д. 10, офис 205', 'ivanova@mail.ru', '+7 (916) 123-45-67'),
('Петрова Анна', 'ИП Иванов', 'ул. Лермонтова, д. 7', 'petrova@yandex.ru', '+7 (903) 123-45-67'),
('Сидорова Мария', 'АО "Сбербанк"', 'ул. Маяковского, д. 15', 'sidorova@sberbank.ru', '+7 (495) 123-45-68'),
('Козлова Татьяна', 'ООО "Радуга"', 'ул. Гагарина, д. 50', 'kozlova_tanya@raduga.ru', '+7 (987) 654-32-11'),
('Григорьева Анна', 'ИП Петров', 'ул. Красноармейская, д. 3', 'grigoreva@yandex.ru', '8-800-555-35-36'),
('Иванов Владимир', 'ООО "Рога и копыта"', 'ул. Пушкина, д. 10, офис 205', 'ivanov_v@mail.ru', '+7 (916) 123-45-68'),
('Петров Илья', 'ИП Иванов', 'ул. Лермонтова, д. 7', 'petrov_i@yandex.ru', '+7 (903) 123-45-68');


INSERT INTO Authorship (id_test, id_author) VALUES
(1, 1),
(2, 3),
(3, 4),
(4, 5),
(5, 6),
(6, 2),
(7, 1);


INSERT INTO Test_question (id_question, id_test) VALUES
(1,1),
(2,1),
(3,1),
(4,1),
(5,1),
(6,1),
(7,1),
(8,1),
(9,1),
(10,1),
(11,1),
(12,1),
(13,1),
(14,1),
(15,1),
(16,1),
(17,1),
(18,1),
(19,1),
(20,1),
(21,2),
(22,2),
(23,2),
(24,2),
(25,2),
(26,2),
(27,2),
(28,2),
(29,2),
(30,2),
(31,2),
(32,2),
(33,2),
(34,2),
(35,2),
(36,2),
(37,2),
(38,2),
(39,2),
(40,2),
(41,3),
(42,3),
(43,3),
(44,3),
(45,3),
(46,3),
(47,3),
(48,3),
(49,3),
(50,3),
(51,3),
(52,3),
(53,3),
(54,3),
(55,3),
(56,3),
(57,3),
(58,3),
(59,3),
(60,3),
(61,4),
(62,4),
(63,4),
(64,4),
(65,4),
(66,4),
(67,4),
(68,4),
(69,4),
(70,4),
(71,4),
(72,4),
(73,4),
(74,4),
(75,4),
(76,4),
(77,4),
(78,4),
(79,4),
(80,4),
(81,5),
(82,5),
(83,5),
(84,5),
(85,5),
(86,5),
(87,5),
(88,5),
(89,5),
(90,5),
(91,5),
(92,5),
(93,5),
(94,5),
(95,5),
(96,5),
(97,5),
(98,5),
(99,5),
(100,5),
(101,6),
(102,6),
(103,6),
(104,6),
(105,6),
(106,6),
(107,6),
(108,6),
(109,6),
(110,6),
(111,6),
(112,6),
(113,6),
(114,6),
(115,6),
(116,6),
(117,6),
(118,6),
(119,6),
(120,6),
(121,7),
(122,7),
(123,7),
(124,7),
(125,7),
(126,7),
(127,7),
(128,7),
(129,7),
(130,7),
(131,7),
(132,7),
(133,7),
(134,7),
(135,7),
(136,7),
(137,7),
(138,7),
(139,7),
(140,7);


INSERT INTO Profession (name, specialization, wage) VALUES
('Software Engineer', 'Web Development', '90000'),
('Data Scientist', 'Machine Learning', '120000'),
('Network Administrator', 'Security', '80000'),
('Digital Marketer', 'Social Media Marketing', '60000'),
('UX/UI Designer', 'Mobile Application Design', '75000'),
('Content Writer', 'Copywriting', '50000'),
('Product Manager', 'Agile Development', '130000'),
('Cloud Solutions Architect', 'AWS', '150000'),
('Data Analyst', 'Business Intelligence', '100000'),
('QA Engineer', 'Automation Testing', '80000'),
('DevOps Engineer', 'Continuous Integration', '140000'),
('Full Stack Developer', 'MEAN Stack', '100000'),
('Sales Manager', 'Enterprise Software', '110000'),
('IT Support Specialist', 'Helpdesk', '55000'),
('Marketing Manager', 'Inbound Marketing', '90000'),
('Graphic Designer', 'Brand Identity', '70000'),
('Technical Writer', 'API Documentation', '60000'),
('HR Manager', 'Talent Acquisition', '120000'),
('Accountant', 'Auditing', '80000'),
('Legal Counsel', 'Corporate Law', '150000'),
('Operations Manager', 'Logistics', '110000'),
('Customer Success Manager', 'SaaS', '100000'),
('Business Analyst', 'Process Improvement', '90000'),
('UI Developer', 'AngularJS', '85000'),
('Project Manager', 'Waterfall', '130000'),
('System Administrator', 'Linux', '90000'),
('Database Administrator', 'MySQL', '100000'),
('Sales Representative', 'Enterprise Software', '70000'),
('Procurement Manager', 'Vendor Management', '110000');
